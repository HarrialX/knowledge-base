Original Source:
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2009/ms09-036

#### Workarounds for Remote Unauthenticated Denial of Service in ASP.NET Vulnerability - CVE-2009-1536
  
Workarounds refer to settings or configuration changes that do not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:
  
-   **Switch to the IIS native thread pool**
  
    When ASP.NET 2.0 is hosted on IIS 7.0 in integrated mode, ASP.NET manages requests using the common language runtime (CLR) thread pool. Systems on which the requests are managed by the IIS 7.0 native thread pool instead of by the CLR thread pool are not affected by this issue. For more information, see the MSDN article, [.NET: The CLR's Thread Pool](http://msdn.microsoft.com/en-us/magazine/cc164139.aspx).
  
    Use one of the following two methods to configure IIS 7.0 to use the native thread pool for process handling.
  
    **Method 1: Specify the value for maxConcurrentRequestsPerCPU in the registry**
  
    This setting is global and affects all application pools. In order to configure this setting for individual application pools, refer to Method 2 in this section.
  
    **Warning** Using Registry Editor incorrectly can cause serious problems that may require you to reinstall your operating system. Microsoft cannot guarantee that problems resulting from the incorrect use of Registry Editor can be solved. Use Registry Editor at your own risk. For information about how to edit the registry, view the "Changing Keys And Values" Help topic in Registry Editor (Regedit.exe) or view the "Add and Delete Information in the Registry" and "Edit Registry Data" Help topics in Regedt32.exe.
  
    **Note** We recommend backing up the registry before you edit it.
  
    1.  Click **Start**, click **Run**, type **Regedit** in the **Open** box, and then click **OK**.  
    2.  Locate and then click the following registry subkey:  
        HKEY\_LOCAL\_MACHINE\\SOFTWARE\\Microsoft\\ASP.NET\\2.0.50727.0  
    3.  On the **Edit** menu, point to **New**, and then click **Key**.  
    4.  Type **maxConcurrentRequestsPerCPU**, and then press **Enter**.  
    5.  Click the **maxConcurrentRequestsPerCPU** key.  
    6.  On the **Edit** menu, point to **New**, and then click **DWORD**.  
    7.  Type **maxConcurrentRequestsPerCPU**, and then press **Enter**.  
    8.  On the **Edit** menu, click **Modify** to modify the **maxConcurrentRequestsPerCPU** registry entry.  
    9.  In the **Value** data box, type **0**, and then click **OK**.  
    10. Exit Registry Editor.  
    11. Use iisreset.exe to restart Microsoft Internet Information Services (IIS) on the Web server that is hosting the application by running the following command at a command line:  
        iisreset /restart
  
    **Specify the value for maxConcurrentRequestsPerCPUvia .REG file**
  
    Windows Registry Editor Version 5.00  
    \[HKEY\_LOCAL\_MACHINE\\SOFTWARE\\Microsoft\\ASP.NET\\2.0.50727.0\]  
    "MaxConcurrentRequestsPerCPU"=dword:00000000
  
    You can apply this .reg file to individual systems by double-clicking it. You can also apply it across domains by using Group Policy. For more information about Group Policy, visit the following Microsoft Web sites:  
    [Group Policy collection](http://technet2.microsoft.com/windowsserver/en/library/6d7cb788-b31d-4d17-9f1e-b5ddaa6deecd1033.mspx?mfr=true)  
    [What is Group Policy Object Editor?](http://technet2.microsoft.com/windowsserver/en/library/47ba1311-6cca-414f-98c9-2d7f99fca8a31033.mspx?mfr=true)  
    [Core Group Policy tools and settings](http://technet2.microsoft.com/windowsserver/en/library/e926577a-5619-4912-b5d9-e73d4bdc94911033.mspx?mfr=true)
  
    **Impact of workaround.** Depending on the nature of applications running in this application pool, application performance may be affected.
  
    **How to undo the workaround.**
  
    Undoing the workaround manually
  
    1.  Click **Start**, click **Run**, type **Regedit** in the **Open** box, and then click **OK**. Locate and then click the following registry subkey:  
        HKEY\_LOCAL\_MACHINE\\SOFTWARE\\Microsoft\\ASP.NET\\2.0.50727.0\\maxConcurrentRequestsPerCPU  
    2.  Right-click the **maxConcurrentRequestsPerCPU** subkey, click **Delete**, and then click **Yes**.  
    3.  Exit the Registry Editor. Use Iisreset.exe to restart Microsoft Internet Information Services (IIS) on the Web server that is hosting the application by running the following command from a command line:  
        iisreset /restart
  
    Undoing the workaround via a .REG file
  
    Version 5.00  
    \[HKEY\_LOCAL\_MACHINE\\SOFTWARE\\Microsoft\\ASP.NET\\2.0.50727.0\]  
    "MaxConcurrentRequestsPerCPU"=dword:00000000
  
    You can apply this .reg file to individual systems by double-clicking it. You can also apply it across domains by using Group Policy. For more information about Group Policy, visit the following Microsoft Web sites:  
    [Group Policy collection](http://technet2.microsoft.com/windowsserver/en/library/6d7cb788-b31d-4d17-9f1e-b5ddaa6deecd1033.mspx?mfr=true)  
    [What is Group Policy Object Editor?](http://technet2.microsoft.com/windowsserver/en/library/47ba1311-6cca-414f-98c9-2d7f99fca8a31033.mspx?mfr=true)  
    [Core Group Policy tools and settings](http://technet2.microsoft.com/windowsserver/en/library/e926577a-5619-4912-b5d9-e73d4bdc94911033.mspx?mfr=true)
  
    **Method 2: Specify the value for maxConcurrentRequestsPerCPUfor an application pool in the ASP.NET config section of an ASPNET.Config file**
  
    **Note** This workaround only applies to systems on which the Microsoft .NET Framework 2.0 SP2 or Microsoft .NET Framework 3.5 SP1 is running. Earlier versions of the Microsoft .NET Framework do not read aspnet.config for this information. This value overrides the value that is specified for maxConcurrentRequestsPerCPU in the registry.
  
    **Note** In order to undo this workaround, you need to restore the original version of the aspnet.config file. Before editing this file, create a backup.
  
    Open the aspnet.config file for the application pool and then enter new values for the maxConcurrentRequestsPerCPU parameter as follows:
  
    <system.web>  
    <applicationPool maxConcurrentRequestsPerCPU="0"/>  
    </system.web>
  
    **Impact of workaround.** Depending on the nature of applications running in this application pool, application performance may be affected.
  
    **How to undo the workaround.** Restore the original version of the aspnet.config file.
  
