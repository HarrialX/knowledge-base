Original Source:
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2006/ms06-033

Workarounds for .NET 2.0 Application Folder Vulnerability - CVE-2006-1300
Microsoft has tested the following workarounds. While these workarounds will not correct the underlying vulnerability, they will help to block known attack vectors. When a workaround reduces functionality, it is identified in the following section.

Remove “Read” permission from all ASP.NET 2.0 Application folders.
Removal of the “Read” permissions for Web content helps protect the affected system from attempts to exploit this vulnerability.

To set permissions for Web content on Windows 2000 running IIS5.0 using the Microsoft Management Console (MMC):

Click Start, then click Run and then type: %systemroot%\system32\inetsrv\iis.msc
When the ‘Internet Information Services’ MMC snap-in loads, in the left pane, click the plus (+) sign next to the computer name to expand the list of web sites hosted on that server.
Expand the first web site by clicking the plus (+) sign next to it.
For each ASP.NET 2.0 ‘Application Folder’, right click on the folder and select ‘Properties’
For a complete list of ASP.NET 2.0 ‘Application Folders’ visit this website.
On the ‘Directory’ or ‘Virtual Directory’ tab clear the checkbox next to ‘Read’ and press ‘OK’
Repeat step 3 for each web site and application hosted on the server.

To set permissions for Web content on Windows 2003 with IIS 6.0 using the Microsoft Management Console (MMC):

Click Start, click Run and then type: %systemroot%\system32\inetsrv\iis.msc
When the ‘Internet Information Services’ MMC snap-in is finished loading, in the left pane, click the plus (+) sign next to the computer name
Click the plus (+) sign next to the ‘Web sites’ folder to expand the list of web sites hosted on that server.
Expand the first web site by clicking the plus (+) sign next to it.
For each ASP.NET 2.0 ‘Application Folder’, right click on the folder and select ‘Properties’
For a complete list of ASP.NET 2.0 ‘Application Folders’ visit this website.
On the ‘Directory’ or ‘Virtual Directory’ tab clear the checkbox next to ‘Read’ and press ‘OK’
Repeat step 4 for each web site and application hosted on the server.

Impact of Workaround: Denying read access on the virtual directory would block reflection and therefore inhibits remote debugging.

Use URLScan with the DenyUrlSequences setting to disallow URLs that request protected file extensions.

If URLScan is already installed, make a backup copy of the URLScan.ini before continuing to the next step.
Configure the URLScan.ini (located in the %windir%\system32\inetsrv\urlscan folder by default) with the following settings:
In the [Options] section, ensure that NormalizeUrlBeforeScan is set to 1
In the [Options] section, ensure that VerifyNormalization is set to 1
In the [DenyUrlSequences] section, ensure that the backslash ‘\’ character is listed
Re-start IIS for the changes to take effect.



Note The above settings are enabled by default in versions of URLScan installed by the IIS Lockdown wizard and for all stand-alone installations of URLScan 2.5.
Note For additional information on configuring URLScan to work with ASP.NET applications refer to Knowledge Base Article 815155.
Impact of Workaround: Improper configuration of URLScan could prevent some web applications from functioning properly.

Use file extensions for files in the App_* folders that are not mapped to ASP.NET and that have no MIME type mapping that IIS can use.
If a static file extension has no MIME type mapping Internet Information Services 6.0 (IIS) will not serve it**.**

Impact of Workaround: None
