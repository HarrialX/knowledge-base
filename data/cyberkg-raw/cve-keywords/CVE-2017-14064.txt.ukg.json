{ 
  "text" : "Ruby through 2.2.7, 2.3.x through 2.3.4, and 2.4.x through 2.4.1 can expose arbitrary memory during a JSON.generate call. The issues lies in using strdup in ext/json/ext/generator/generator.c, which will stop after encountering a '\\0' byte, returning a pointer to a string of length zero, which is not the length stored in space_len.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "0aae4c8f3cc35693d0cbbe631f2e8b52" ,
    "type" : "MiscEntity" ,
    "subType" : "issue" ,
    "value" : "issue" ,
    "begin" : 126 ,
    "end" : 132 ,
    "canonicalForm" : "issue" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "FilePath#2c00afb44e142dda737c27cd86765dfa" ,
    "type" : "FilePath" ,
    "subType" : "FilePath" ,
    "value" : "/json/ext/generator/generator" ,
    "begin" : 160 ,
    "end" : 189 ,
    "canonicalForm" : "/json/ext/generator/generator" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [ { 
    "rid" : "R1" ,
    "type" : "lie_in" ,
    "predicate" : { 
      "begin" : 133 ,
      "end" : 140 ,
      "surfaceForm" : "lies in"
    }
     ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 126 ,
      "end" : 132 ,
      "eid" : "E1" ,
      "canonicalForm" : "issue"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 160 ,
      "end" : 189 ,
      "eid" : "E2" ,
      "canonicalForm" : "/json/ext/generator/generator"
    }
    ,  ]
  }
  ,  ]
}
