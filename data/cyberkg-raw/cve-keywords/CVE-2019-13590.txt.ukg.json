{ 
  "text" : "An issue was discovered in libsox.a in SoX 14.4.2. In sox-fmt.h (startread function), there is an integer overflow on the result of integer addition (wraparound to 0) fed into the lsx_calloc macro that wraps malloc. When a NULL pointer is returned, it is used without a prior check that it is a valid pointer, leading to a NULL pointer dereference on lsx_readbuf in formats_i.c.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "Product#43a694c6f3787e4f3b2232076ea6b55d" ,
    "type" : "Product" ,
    "subType" : "SWLibrary" ,
    "value" : "libsox.a" ,
    "begin" : 27 ,
    "end" : 35 ,
    "canonicalForm" : "libsox.a" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "Vulnerability#80376fa50e037b74d2dee0090921aa65" ,
    "type" : "Vulnerability" ,
    "subType" : "Vulnerability" ,
    "value" : "integer overflow" ,
    "begin" : 98 ,
    "end" : 114 ,
    "canonicalForm" : "integer overflow" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [  ]
}
