Original Source:
https://github.com/bigbluebutton/bigbluebutton/pull/9259/commits/b21ca8355a57286a1e6df96984b3a4c57679a463

Commit history:

  @@ -88,10 +88,28 @@ public void processMakePresentationDownloadableMsg(MakePresentationDownloadableM
      }
  
   public File getDownloadablePresentationFile(String meetingId, String presId, String presFilename) {
-   log.info("Find downloadable presentation for meetingId={} presId={} filename={}", meetingId, presId, presFilename);
- 
+   log.info("Find downloadable presentation for meetingId={} presId={} filename={}", meetingId, presId,
+                 presFilename);
   File presDir = Util.getPresentationDir(presentationBaseDir, meetingId, presId);
-  return new File(presDir.getAbsolutePath() + File.separatorChar + presFilename);
+  // Build file to presFilename
+  // Get canonicalPath and make sure it starts with
+  // /var/bigbluebutton/<meetingid-pattern>
+  // If so return file, if not return null
+  File presFile = new File(presDir.getAbsolutePath() + File.separatorChar + presFilename);
+  try {
+  String presFileCanonical = presFile.getCanonicalPath();
+             log.debug("Requested presentation name file full path {}",presFileCanonical);
+  if (presFileCanonical.startsWith(presentationBaseDir)) {
+  return presFile;
+             }
+         } catch (IOException e) {
+             log.error("Exception getting canonical path for {}.\n{}", presFilename, e);
+  return null;
+         }
+ 
+         log.error("Cannot find file for {}.", presFilename);
+ 
+  return null;
      }
  
   public void kickOffRecordingChapterBreak(String meetingId, Long timestamp) {
  
  @@ -297,7 +297,7 @@ class PresentationController {
   InputStream is = null;
   try {
   def pres = meetingService.getDownloadablePresentationFile(meetingId, presId, presFilename)
-  if (pres.exists()) {
+  if (pres != null && pres.exists()) {
          log.debug "Controller: Sending pdf reply for $presFilename"
  
   def bytes = pres.readBytes()
  @@ -311,9 +311,11 @@ class PresentationController {
          response.outputStream << bytes;
        } else {
          log.warn "$pres does not exist."
+ 		response.status = 404
        }
      } catch (IOException e) {
        log.error("Error reading file.\n" + e.getMessage());
+ 	  response.status = 404
      }
    }
  
  
