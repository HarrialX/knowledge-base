Original Source:
https://github.com/keycloak/keycloak/commit/9a7c1a91a59ab85e7f8889a505be04a71580777f

Commit history:

  @@ -76,7 +76,6 @@
          {
   "username" : "service-account-product-sa-client",
   "enabled": true,
-  "email" : "service-account-product-sa-client@placeholder.org",
   "serviceAccountClientId": "product-sa-client",
   "realmRoles": [ "user" ]
          }
  
  @@ -164,7 +164,6 @@ public void enableServiceAccount(ClientModel client) {
   // Don't use federation for service account user
   UserModel user = realmManager.getSession().userLocalStorage().addUser(client.getRealm(), username);
              user.setEnabled(true);
-             user.setEmail(username + "@placeholder.org");
              user.setServiceAccountClientLink(client.getId());
          }
  
  @@ -205,7 +204,6 @@ public void clientIdChanged(ClientModel client, String newClientId) {
   if (serviceAccountUser != null) {
   String username = ServiceAccountConstants.SERVICE_ACCOUNT_USER_PREFIX + newClientId;
              serviceAccountUser.setUsername(username);
-             serviceAccountUser.setEmail(username + "@placeholder.org");
          }
      }
  
  
  @@ -111,7 +111,6 @@
      {
   "username": "service-account-photoz-restful-api",
   "enabled": true,
-  "email": "service-account-photoz-restful-api@placeholder.org",
   "serviceAccountClientId": "photoz-restful-api",
   "clientRoles": {
   "photoz-restful-api" : ["uma_protection"]
  
  @@ -231,6 +231,8 @@ public void serviceAccount() {
          response.close();
   UserRepresentation userRep = realm.clients().get(id).getServiceAccountUser();
          assertEquals("service-account-serviceclient", userRep.getUsername());
+  // KEYCLOAK-11197 service accounts are no longer created with a placeholder e-mail.
+         assertNull(userRep.getEmail());
      }
  
   // KEYCLOAK-3421
  
