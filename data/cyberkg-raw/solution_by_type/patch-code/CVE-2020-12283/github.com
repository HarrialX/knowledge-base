Original Source:
https://github.com/sourcegraph/sourcegraph/commit/c0f48172e815c7f66471a38f0a06d1fc32a77a64

Commit history:

  @@ -2,6 +2,7 @@ package auth
  
  import (
   "net/url"
+  "path"
   "strings"
  )
  
  @@ -15,6 +16,9 @@ func SafeRedirectURL(urlStr string) string {
   return "/"
  	}
  
+  // Make sure u.Path always starts with a single slash.
+  u.Path = path.Clean(u.Path)
+ 
   // Only take certain known-safe fields.
   u = &url.URL{Path: u.Path, RawQuery: u.RawQuery}
   return u.String()
  
  @@ -4,15 +4,16 @@ import "testing"
  
  func TestSafeRedirectURL(t *testing.T) {
   tests := map[string]string{
-  "":               "/",
-  "/":              "/",
-  "a@b.com:c":      "/",
-  "a@b.com/c":      "/",
-  "//a":            "/",
-  "http://a.com/b": "/b",
-  "//a.com/b":      "/b",
-  "//a@b.com/c":    "/c",
-  "/a?b":           "/a?b",
+  "":                   "/",
+  "/":                  "/",
+  "a@b.com:c":          "/",
+  "a@b.com/c":          "/",
+  "//a":                "/",
+  "http://a.com/b":     "/b",
+  "//a.com/b":          "/b",
+  "//a@b.com/c":        "/c",
+  "/a?b":               "/a?b",
+  "//foo//example.com": "/example.com",
  	}
   for input, want := range tests {
   got := SafeRedirectURL(input)
  
