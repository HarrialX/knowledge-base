Original Source:
https://github.com/gettalong/kramdown/commit/1b8fd33c3120bfc6e5164b449e2c2fc9c9306fde

Commit history:

  @@ -589,6 +589,16 @@ def self.simple_hash_validator(val, name)
        Used by: HTML converter
      EOF
  
+  define(:forbidden_inline_options, Object, %w[template], <<~EOF) do |val|
+       Defines the options that may not be set using the {::options} extension
+ 
+       Default: template
+       Used by: HTML converter
+     EOF
+  val.map! {|item| item.kind_of?(String) ? str_to_sym(item) : item }
+  simple_array_validator(val, :forbidden_inline_options)
+  end
+ 
   end
  
  end
  @@ -110,6 +110,12 @@ def handle_extension(name, opts, body, type, line_no = nil)
   opts.select do |k, v|
   k = k.to_sym
   if Kramdown::Options.defined?(k)
+  if @options[:forbidden_inline_options].include?(k) ||
+  k == :forbidden_inline_options
+  warning("Option #{k} may not be set inline")
+  next false
+  end
+ 
   begin
   val = Kramdown::Options.parse(k, v)
   @options[k] = val
  
  @@ -19,3 +19,5 @@ some <span>*para*</span>
  Some text[^ab].
  
  [^ab]: Some text.
+ 
+ {::options template="/etc/passwd" /}
