Original Source:
https://github.com/jquery/jquery/pull/2588/commits/c254d308a7d3f1eac4d0b42837804cfffcba4bb2

Commit history:

  @@ -221,14 +221,19 @@ function ajaxConvert( s, response, jqXHR, isSuccess ) {
  
   if ( current ) {
  
-  // There's only work to do if current dataType is non-auto
+   // There's only work to do if current dataType is non-auto
   if ( current === "*" ) {
  
   current = prev;
  
   // Convert response if prev dataType is non-auto and differs from current
   } else if ( prev !== "*" && prev !== current ) {
  
+  // Mitigate possible XSS vulnerability (gh-2432)
+  if ( s.crossDomain && current === "script" ) {
+  continue;
+  }
+ 
   // Seek a direct converter
   conv = converters[ prev + " " + current ] || converters[ "* " + current ];
  
  
  @@ -71,6 +71,54 @@ QUnit.module( "ajax", {
   };
   } );
  
+  ajaxTest( "jQuery.ajax() - do not execute js (crossOrigin)", 2, function( assert ) {
                  This comment has been minimized.

          


Sign in to view






























FagnerMartinsBrack



Mar 21, 2016






Ain't you using assert.expect(2) anymore? xD
+  return {
+  create: function( options ) {
+  options.crossDomain = true;
+  return jQuery.ajax( url( "data/script.php?header=ecma" ), options );
+  },
+  success: function() {
+  assert.ok( true, "success" );
+  },
+  complete: function() {
+  assert.ok( true, "complete" );
+  }
+  };
+  } );
+ 
+  ajaxTest( "jQuery.ajax() - execute js for crossOrigin when dataType option is provided", 3,
+  function( assert ) {
+  return {
+  create: function( options ) {
+  options.crossDomain = true;
+  options.dataType = "script";
+  return jQuery.ajax( url( "data/script.php?header=ecma" ), options );
+  },
+  success: function() {
+  assert.ok( true, "success" );
+  },
+  complete: function() {
+  assert.ok( true, "complete" );
+  }
+  };
+  }
+  );
+ 
+  ajaxTest( "jQuery.ajax() - do not execute js (crossOrigin)", 2, function( assert ) {
+  return {
+  create: function( options ) {
+  options.crossDomain = true;
+  return jQuery.ajax( url( "data/script.php" ), options );
+  },
+  success: function() {
+  assert.ok( true, "success" );
+  },
+  complete: function() {
+  assert.ok( true, "complete" );
+  }
+  };
+  } );
+ 
   ajaxTest( "jQuery.ajax() - success callbacks (late binding)", 8, function( assert ) {
   return {
   setup: addGlobalEvents( "ajaxStart ajaxStop ajaxSend ajaxComplete ajaxSuccess", assert ),
  
