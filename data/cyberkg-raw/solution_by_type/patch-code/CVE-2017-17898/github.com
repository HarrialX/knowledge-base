Original Source:
https://github.com/Dolibarr/dolibarr/commit/6a62e139604dbbd5729e57df2433b37a5950c35c

Commit history:

  @@ -15,6 +15,15 @@
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
   */
+ 
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
+ 
  $prefix = $conf->global->ACCOUNTING_EXPORT_PREFIX_SPEC;
  $format = $conf->global->ACCOUNTING_EXPORT_FORMAT;
  $nodateexport = $conf->global->ACCOUNTING_EXPORT_NO_DATE_IN_FILENAME;
  
  @@ -14,8 +14,15 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
+ 
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE ADHERENTCARD_CREATE.TPL.PHP DEFAULT -->
  
  @@ -14,9 +14,16 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
  
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
+ 
  $contact = $GLOBALS['objcanvas']->control->object;
  
  ?>
  
  @@ -14,10 +14,18 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
  
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
+ 
  $contact = $GLOBALS['objcanvas']->control->object;
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE ADHERENTCARD_VIEW.TPL.PHP DEFAULT -->
  
  @@ -15,8 +15,15 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
+ 
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE -->
  @@ -33,7 +40,7 @@
  $total=0;
  foreach($linkedObjectBlock as $key => $objectlink)
  {
-  
+ 
  ?>
  <tr <?php echo $GLOBALS['bc'][$var]; ?> >
   <td><?php echo $langs->trans("Subscription"); ?></td>
  
  @@ -22,6 +22,14 @@
   *  \ingroup	propal
   *  \brief		Template to show objects linked to proposals
   */
+ 
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE -->
  @@ -40,7 +48,7 @@
  foreach($linkedObjectBlock as $key => $objectlink)
  {
   $ilink++;
-  
+ 
   $trclass=($var?'pair':'impair');
   if ($ilink == count($linkedObjectBlock) && empty($noMoreLinkedObjectBlockAfter) && count($linkedObjectBlock) <= 1) $trclass.=' liste_sub_total';
  ?>
  @@ -71,7 +79,7 @@
   <td align="right"></td>
   <td align="right"></td>
   </tr>
-  <?php 
+  <?php
  }
  ?>
  
  
  @@ -15,8 +15,15 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
+ 
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE -->
  @@ -36,7 +43,7 @@
  foreach($linkedObjectBlock as $key => $objectlink)
  {
   $ilink++;
-  
+ 
   $trclass=($var?'pair':'impair');
   if ($ilink == count($linkedObjectBlock) && empty($noMoreLinkedObjectBlockAfter) && count($linkedObjectBlock) <= 1) $trclass.=' liste_sub_total';
  ?>
  @@ -76,7 +83,7 @@
   <td align="right"></td>
   <td align="right"></td>
   </tr>
-  <?php 
+  <?php
  }
  ?>
  
  
  @@ -2538,7 +2538,7 @@
  				print '&nbsp;&nbsp;&nbsp; <input data-role="none" type="checkbox" name="invoiceAvoirWithLines" id="invoiceAvoirWithLines" value="1" onclick="$(\'#credit_note_options input[type=checkbox]\').not(this).prop(\'checked\', false);" '.(GETPOST('invoiceAvoirWithLines','int')>0 ? 'checked':'').' /> <label for="invoiceAvoirWithLines">'.$langs->trans('invoiceAvoirWithLines')."</label>";
  				print '<br>&nbsp;&nbsp;&nbsp; <input data-role="none" type="checkbox" name="invoiceAvoirWithPaymentRestAmount" id="invoiceAvoirWithPaymentRestAmount" value="1" onclick="$(\'#credit_note_options input[type=checkbox]\').not(this).prop(\'checked\', false);" '.(GETPOST('invoiceAvoirWithPaymentRestAmount','int')>0 ? 'checked':'').' /> <label for="invoiceAvoirWithPaymentRestAmount">'.$langs->trans('invoiceAvoirWithPaymentRestAmount')."</label>";
  				print '</div>';
-  
+ 
      			print '</div></div>';
      		}
  		}
  
  @@ -15,8 +15,15 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
+ 
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE -->
  @@ -36,7 +43,7 @@
  foreach($linkedObjectBlock as $key => $objectlink)
  {
   $ilink++;
-  
+ 
   $trclass=($var?'pair':'impair');
   if ($ilink == count($linkedObjectBlock) && empty($noMoreLinkedObjectBlockAfter) && count($linkedObjectBlock) <= 1) $trclass.=' liste_sub_total';
  ?>
  @@ -54,7 +61,7 @@
   $total = $total + $sign * $objectlink->total_ht;
   echo price($objectlink->total_ht);
      			}
-  else 
+  else
      			{
   echo '<strike>'.price($objectlink->total_ht).'</strike>';
      			}
  @@ -76,7 +83,7 @@
   <td align="right"></td>
   <td align="right"></td>
   </tr>
-  <?php 
+  <?php
  }
  ?>
  
  
  @@ -15,8 +15,15 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
+ 
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE -->
  @@ -36,7 +43,7 @@
  foreach($linkedObjectBlock as $key => $objectlink)
  {
   $ilink++;
-  
+ 
   $trclass=($var?'pair':'impair');
   if ($ilink == count($linkedObjectBlock) && empty($noMoreLinkedObjectBlockAfter) && count($linkedObjectBlock) <= 1) $trclass.=' liste_sub_total';
  ?>
  
  @@ -13,8 +13,15 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
+ 
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE CONTACTCARD_CREATE.TPL.PHP DEFAULT -->
  
  @@ -13,9 +13,16 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
  
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
+ 
  $contact = $GLOBALS['objcanvas']->control->object;
  
  ?>
  
  @@ -13,9 +13,16 @@
   *
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
-  *
   */
  
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
+ 
  $contact = $GLOBALS['objcanvas']->control->object;
  ?>
  
  
  @@ -14,6 +14,14 @@
   * You should have received a copy of the GNU General Public License
   * along with this program. If not, see <http://www.gnu.org/licenses/>.
   */
+ 
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE -->
  @@ -33,7 +41,7 @@
  foreach($linkedObjectBlock as $key => $objectlink)
  {
   $ilink++;
-  
+ 
   $trclass=($var?'pair':'impair');
   if ($ilink == count($linkedObjectBlock) && empty($noMoreLinkedObjectBlockAfter) && count($linkedObjectBlock) <= 1) $trclass.=' liste_sub_total';
  ?>
  
  @@ -26,6 +26,13 @@
   * $elementtype
   */
  
+ // Protection to avoid direct call of template
+ if (empty($conf) || ! is_object($conf))
+ {
+ 	print "Error, template page can't be called as URL";
+ 	exit;
+ }
+ 
  ?>
  
  <!-- BEGIN PHP TEMPLATE admin_extrafields_add.tpl.php -->
  @@ -56,11 +63,11 @@ function init_typeoffields(type)
  
   // Case of computed field
   console.log(type);
-  if (type == '' || type == 'varchar' || type == 'int' || type == 'double' || type == 'price') { 
-  jQuery("tr.extra_computed_value").show(); 
+  if (type == '' || type == 'varchar' || type == 'int' || type == 'double' || type == 'price') {
+  jQuery("tr.extra_computed_value").show();
   } else {
   computed_value.val(''); jQuery("tr.extra_computed_value").hide();
-  } 
+  }
   if (computed_value.val())
   {
   console.log("We enter a computed formula");
  @@ -75,7 +82,7 @@ function init_typeoffields(type)
   jQuery("#default_value, #unique, #required, #alwayseditable, #ishidden, #list").attr('disabled', false);
   jQuery("tr.extra_default_value, tr.extra_unique, tr.extra_required, tr.extra_alwayseditable, tr.extra_ishidden, tr.extra_list").show();
   }
-  
+ 
   if (type == 'date') { size.val('').prop('disabled', true); unique.removeAttr('disabled'); jQuery("#value_choice").hide();jQuery("#helpchkbxlst").hide(); }
   else if (type == 'datetime') { size.val('').prop('disabled', true); unique.removeAttr('disabled'); jQuery("#value_choice").hide(); jQuery("#helpchkbxlst").hide();}
   else if (type == 'double') { size.val('24,8').removeAttr('disabled'); unique.removeAttr('disabled'); jQuery("#value_choice").hide(); jQuery("#helpchkbxlst").hide();}
  @@ -90,8 +97,8 @@ function init_typeoffields(type)
   else if (type == 'checkbox') { size.val('').prop('disabled', true); unique.removeAttr('checked').prop('disabled', true); jQuery("#value_choice").show();jQuery("#helpselect").show();jQuery("#helpsellist").hide();jQuery("#helpchkbxlst").hide();jQuery("#helplink").hide();}
   else if (type == 'chkbxlst') { size.val('').prop('disabled', true); unique.removeAttr('checked').prop('disabled', true); jQuery("#value_choice").show();jQuery("#helpselect").hide();jQuery("#helpsellist").hide();jQuery("#helpchkbxlst").show();jQuery("#helplink").hide();}
   else if (type == 'link') { size.val('').prop('disabled', true); unique.removeAttr('disabled'); jQuery("#value_choice").show();jQuery("#helpselect").hide();jQuery("#helpsellist").hide();jQuery("#helpchkbxlst").hide();jQuery("#helplink").show();}
-  else if (type == 'separate') { 
-  size.val('').prop('disabled', true); unique.removeAttr('checked').prop('disabled', true); required.val('').prop('disabled', true); 
+  else if (type == 'separate') {
+  size.val('').prop('disabled', true); unique.removeAttr('checked').prop('disabled', true); required.val('').prop('disabled', true);
   jQuery("#value_choice").hide();jQuery("#helpselect").hide();jQuery("#helpsellist").hide();jQuery("#helpchkbxlst").hide();jQuery("#helplink").hide();
   }
   else { // type = string
  @@ -102,12 +109,12 @@ function init_typeoffields(type)
   if (type == 'separate')
   {
   required.removeAttr('checked').prop('disabled', true); alwayseditable.removeAttr('checked').prop('disabled', true); list.val('').prop('disabled', true);
-  jQuery('#size, #default_value').val('').prop('disabled', true); 
+  jQuery('#size, #default_value').val('').prop('disabled', true);
   }
   else
   {
   default_value.removeAttr('disabled');
-  required.removeAttr('disabled'); alwayseditable.removeAttr('disabled'); list.val('').removeAttr('disabled'); 
+  required.removeAttr('disabled'); alwayseditable.removeAttr('disabled'); list.val('').removeAttr('disabled');
   }
   }
   init_typeoffields('<?php echo GETPOST('type'); ?>');
  
