Original Source:
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2009/ms09-012

Workarounds for Windows MSDTC Service Isolation Vulnerability - CVE-2008-1436
Workaround refers to a setting or configuration change that does not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:

IIS 6.0 - Configure a Worker Process Identity (WPI) for an application pool in IIS to use a created account in IIS Manager and disable MSDTC
Perform the following steps:

In IIS Manager, expand the local computer, expand Application Pools, right-click the application pool and select Properties.
Click the Identity tab and click Configurable. In the User name and Password boxes, type the user name and password of the account under which you want the worker process to operate.
Add the chosen user account to the IIS_WPG group.

Disabling the Distributed Transaction Coordinator will help protect the affected system from attempts to exploit this vulnerability. To disable the Distributed Transaction Coordinator, perform these steps:

Click Start, and then click Control Panel. Alternatively, point to Settings, and then click Control Panel.
Double-click Administrative Tools. Alternatively, click Switch to Classic View and then double-click Administrative Tools.
Double-click Services.
Double-click Distributed Transaction Coordinator.
In the Startup type list, click Disabled.
Click Stop (if started), and then click OK.

You can also stop and disable the MSDTC service by using the following command at the command prompt:
sc stop MSDTC & sc config MSDTC start= disabled
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected. An example is Windows Authentication; see Microsoft Knowledge Base Article 871179. Disabling MSDTC will prevent applications from using distributed transactions. Disabling MSDTC will prevent IIS 5.1 from running in Windows XP Professional Service Pack 2 and Windows XP Professional Service Pack 3, and IIS 6.0 running in IIS 5.0 compatibility mode. Disabling MSDTC will prevent configuration as well as running of COM+ applications.

IIS 7.0 - Specify a WPI for an application pool in IIS Manager

In IIS Manager, expand the server node, click Application Pools, right-click the application pool, and then click Advanced Settings…
Find the Identity entry, and click the … button to open the Application Pool Identity dialog box.
Select the Custom account option and click Set to open the Set Credentials dialog box. Type in the selected Account name and Password in the user name and password text boxes. Retype the Password in the Confirm password text box, then click OK.

Note Application pool identities are dynamically added to IIS_WPG group in IIS7 and don’t need to be manually added.
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected.

IIS 7.0 - Specify a WPI for an application pool using the Command Line utility, APPCMD.exe

From an elevated command prompt, change to the %systemroot%\system32\inetsrv directory.
Execute the APPCMD.exe command using the following syntax where string is the name of the application pool; userName:string is the user name of the account assigned to the application pool; and password:string is the password for the account.
appcmd set config /section:applicationPools /
[name='string'].processModel.identityType:SpecificUser /
[name='string'].processModel.userName:string /
[name='string'].processModel.password:string

Note Application pool identities are dynamically added to IIS_WPG group in IIS 7.0 and do not need to be manually added.
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected.


Workarounds for Windows WMI Service Isolation Vulnerability - CVE-2009-0078
Workaround refers to a setting or configuration change that does not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:

IIS 6.0 - Configure a Worker Process Identity (WPI) for an application pool in IIS to use a created account in IIS Manager and disable MSDTC
Perform the following steps:

In IIS Manager, expand the local computer, expand Application Pools, right-click the application pool and select Properties.
Click the Identity tab and click Configurable. In the User name and Password boxes, type the user name and password of the account under which you want the worker process to operate.
Add the chosen user account to the IIS_WPG group.

Disabling the Distributed Transaction Coordinator will help protect the affected system from attempts to exploit this vulnerability. To disable the Distributed Transaction Coordinator, perform these steps:

Click Start, and then click Control Panel. Alternatively, point to Settings, and then click Control Panel.
Double-click Administrative Tools. Alternatively, click Switch to Classic View and then double-click Administrative Tools.
Double-click Services.
Double-click Distributed Transaction Coordinator.
In the Startup type list, click Disabled.
Click Stop (if started), and then click OK.

You can also stop and disable the MSDTC service by using the following command at the command prompt:
sc stop MSDTC & sc config MSDTC start= disabled
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected. An example is Windows Authentication; see Microsoft Knowledge Base Article 871179. Disabling MSDTC will prevent applications from using distributed transactions. Disabling MSDTC will prevent IIS 5.1 from running in Windows XP Professional Service Pack 2 and Windows XP Professional Service Pack 3, and IIS 6.0 running in IIS 5.0 compatibility mode. Disabling MSDTC will prevent configuration as well as running of COM+ applications.

IIS 7.0 - Specify a WPI for an application pool in IIS Manager

In IIS Manager, expand the server node, click Application Pools, right-click the application pool, and then click Advanced Settings…
Find the Identity entry, and click the … button to open the Application Pool Identity dialog box.
Select the Custom account option and click Set to open the Set Credentials dialog box. Type in the selected Account name and Password in the user name and password text boxes. Retype the Password in the Confirm password text box, then click OK.

Note Application pool identities are dynamically added to IIS_WPG group in IIS7 and don’t need to be manually added.
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected.

IIS 7.0 - Specify a WPI for an application pool using the Command Line utility APPCMD.exe

From an elevated command prompt, change to the %systemroot%\system32\inetsrv directory.
Execute the APPCMD.exe command using the following syntax where string is the name of the application pool; userName:string is the user name of the account assigned to the application pool; and password:string is the password for the account.
appcmd set config /section:applicationPools /
[name='string'].processModel.identityType:SpecificUser /
[name='string'].processModel.userName:string /
[name='string'].processModel.password:string

Note Application pool identities are dynamically added to IIS_WPG group in IIS 7.0 and do not need to be manually added.
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected.


Workarounds for Windows RPCSS Service Isolation Vulnerability - CVE-2009-0079
Workaround refers to a setting or configuration change that does not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:

IIS 6.0 - Configure a Worker Process Identity (WPI) for an application pool in IIS to use a created account in IIS Manager and disable MSDTC
Perform the following steps:

In IIS Manager, expand the local computer, expand Application Pools, right-click the application pool and select Properties.
Click the Identity tab and click Configurable. In the User name and Password boxes, type the user name and password of the account under which you want the worker process to operate.
Add the chosen user account to the IIS_WPG group.

Disabling the Distributed Transaction Coordinator will help protect the affected system from attempts to exploit this vulnerability. To disable the Distributed Transaction Coordinator, perform these steps:

Click Start, and then click Control Panel. Alternatively, point to Settings, and then click Control Panel.
Double-click Administrative Tools. Alternatively, click Switch to Classic View and then double-click Administrative Tools.
Double-click Services.
Double-click Distributed Transaction Coordinator.
In the Startup type list, click Disabled.
Click Stop (if started), and then click OK.

You can also stop and disable the MSDTC service by using the following command at the command prompt:
sc stop MSDTC & sc config MSDTC start= disabled
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected. An example is Windows Authentication; see Microsoft Knowledge Base Article 871179. Disabling MSDTC will prevent applications from using distributed transactions. Disabling MSDTC will prevent IIS 5.1 from running in Windows XP Professional Service Pack 2 and Windows XP Professional Service Pack 3, and IIS 6.0 running in IIS 5.0 compatibility mode. Disabling MSDTC will prevent configuration as well as running of COM+ applications.

IIS 7.0 - Specify a WPI for an application pool in IIS Manager

In IIS Manager, expand the server node, click Application Pools, right-click the application pool, and then click Advanced Settings…
Find the Identity entry, and click the … button to open the Application Pool Identity dialog box.
Select the Custom account option and click Set to open the Set Credentials dialog box. Type in the selected Account name and Password in the user name and password text boxes. Retype the Password in the Confirm password text box, then click OK.

Note Application pool identities are dynamically added to IIS_WPG group in IIS7 and don’t need to be manually added.
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected.

IIS 7.0 - Specify a WPI for an application pool using the Command Line utility APPCMD.exe

From an elevated command prompt, change to the %systemroot%\system32\inetsrv directory.
Execute the APPCMD.exe command using the following syntax where string is the name of the application pool; userName:string is the user name of the account assigned to the application pool; and password:string is the password for the account.
appcmd set config /section:applicationPools /
[name='string'].processModel.identityType:SpecificUser /
[name='string'].processModel.userName:string /
[name='string'].processModel.password:string

Note Application pool identities are dynamically added to IIS_WPG group in IIS 7.0 and do not need to be manually added.
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected.


Workarounds for Windows Thread Pool ACL Weakness Vulnerability - CVE-2009-0080
Workaround refers to a setting or configuration change that does not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:

IIS 6.0 - Configure a Worker Process Identity (WPI) for an application pool in IIS to use a created account in IIS Manager and disable MSDTC
Perform the following steps:

In IIS Manager, expand the local computer, expand Application Pools, right-click the application pool and select Properties.
Click the Identity tab and click Configurable. In the User name and Password boxes, type the user name and password of the account under which you want the worker process to operate.
Add the chosen user account to the IIS_WPG group.

Disabling the Distributed Transaction Coordinator will help protect the affected system from attempts to exploit this vulnerability. To disable the Distributed Transaction Coordinator, perform these steps:

Click Start, and then click Control Panel. Alternatively, point to Settings, and then click Control Panel.
Double-click Administrative Tools. Alternatively, click Switch to Classic View and then double-click Administrative Tools.
Double-click Services.
Double-click Distributed Transaction Coordinator.
In the Startup type list, click Disabled.
Click Stop (if started), and then click OK.

You can also stop and disable the MSDTC service by using the following command at the command prompt:
sc stop MSDTC & sc config MSDTC start= disabled
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected. An example is Windows Authentication; see Microsoft Knowledge Base Article 871179. Disabling MSDTC will prevent applications from using distributed transactions. Disabling MSDTC will prevent IIS 5.1 from running in Windows XP Professional Service Pack 2 and Windows XP Professional Service Pack 3, and IIS 6.0 running in IIS 5.0 compatibility mode. Disabling MSDTC will prevent configuration as well as running of COM+ applications.

IIS 7.0 - Specify a WPI for an application pool in IIS Manager

In IIS Manager, expand the server node, click Application Pools, right-click the application pool, and then click Advanced Settings…
Find the Identity entry, and click the … button to open the Application Pool Identity dialog box.
Select the Custom account option and click Set to open the Set Credentials dialog box. Type in the selected Account name and Password in the user name and password text boxes. Retype the Password in the Confirm password text box, then click OK.

Note Application pool identities are dynamically added to IIS_WPG group in IIS7 and don’t need to be manually added.
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected.

IIS 7.0 - Specify a WPI for an application pool using the Command Line utility APPCMD.exe

From an elevated command prompt, change to the %systemroot%\system32\inetsrv directory.
Execute the APPCMD.exe command using the following syntax where string is the name of the application pool; userName:string is the user name of the account assigned to the application pool; and password:string is the password for the account.
appcmd set config /section:applicationPools /
[name='string'].processModel.identityType:SpecificUser /
[name='string'].processModel.userName:string /
[name='string'].processModel.password:string

Note Application pool identities are dynamically added to IIS_WPG group in IIS 7.0 and do not need to be manually added.
Impact of Workaround: Managing the additional user accounts created in this workaround results in increased administrative overhead. Depending on the nature of applications running in this application pool, application functionality may be affected.


