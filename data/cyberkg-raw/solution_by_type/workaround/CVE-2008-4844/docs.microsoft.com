Original Source:
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2008/ms08-078

Workarounds for Pointer Reference Memory Corruption Vulnerability - CVE-2008-4844
Workaround refers to a setting or configuration change that does not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:

Set Internet and Local intranet security zone settings to "High" to prompt before running ActiveX Controls and Active Scripting in these zones
You can help protect against exploitation of this vulnerability by changing your settings for the Internet security zone to prompt before running ActiveX controls and Active Scripting. You can do this by setting your browser security to High.
To raise the browsing security level in Internet Explorer, follow these steps:

On the Internet Explorer Tools menu, click Internet Options.
In the Internet Options dialog box, click the Security tab, and then click the Internet icon.
Under Security level for this zone, move the slider to High. This sets the security level for all Web sites you visit to High.

Note If no slider is visible, click Default Level, and then move the slider to High.
Note Setting the level to High may cause some Web sites to work incorrectly. If you have difficulty using a Web site after you change this setting, and you are sure the site is safe to use, you can add that site to your list of trusted sites. This will allow the site to work correctly even with the security setting set to High.
Impact of workaround. There are side effects to prompting before running ActiveX Controls and Active Scripting. Many Web sites that are on the Internet or on an intranet use ActiveX or Active Scripting to provide additional functionality. For example, an online e-commerce site or banking site may use ActiveX Controls to provide menus, ordering forms, or even account statements. Prompting before running ActiveX Controls or Active Scripting is a global setting that affects all Internet and intranet sites. You will be prompted frequently when you enable this workaround. For each prompt, if you feel you trust the site that you are visiting, click Yes to run ActiveX Controls or Active Scripting. If you do not want to be prompted for all these sites, use the steps outlined in "Add sites that you trust to the Internet Explorer Trusted sites zone".
Add sites that you trust to the Internet Explorer Trusted sites zone
After you set Internet Explorer to require a prompt before it runs ActiveX controls and Active Scripting in the Internet zone and in the Local intranet zone, you can add sites that you trust to the Internet Explorer Trusted sites zone. This will allow you to continue to use trusted Web sites exactly as you do today, while helping to protect you from this attack on untrusted sites. We recommend that you add only sites that you trust to the Trusted sites zone.
To do this, follow these steps:

In Internet Explorer, click Tools, click Internet Options, and then click the Security tab.
In the Select a Web content zone to specify its current security settings box, click Trusted Sites, and then click Sites.
If you want to add sites that do not require an encrypted channel, click to clear the Require server verification (https:) for all sites in this zone check box.
In the Add this Web site to the zone box, type the URL of a site that you trust, and then click Add.
Repeat these steps for each site that you want to add to the zone.
Click OK two times to accept the changes and return to Internet Explorer.

Note Add any sites that you trust not to take malicious action on your system. Two in particular that you may want to add are *.windowsupdate.microsoft.com and *.update.microsoft.com. These are the sites that will host the update, and it requires an ActiveX Control to install the update.

Configure Internet Explorer to prompt before running Active Scripting or to disable Active Scripting in the Internet and Local intranet security zone
You can help protect against exploitation of this vulnerability by changing your settings to prompt before running Active Scripting or to disable Active Scripting in the Internet and Local intranet security zone. To do this, follow these steps:

In Internet Explorer, click Internet Options on the Tools menu.
Click the Security tab.
Click Internet, and then click Custom Level.
Under Settings, in the Scripting section, under Active Scripting, click Prompt or Disable, and then click OK.
Click Local intranet, and then click Custom Level.
Under Settings, in the Scripting section, under Active Scripting, click Prompt or Disable, and then click OK.
Click OK two times to return to Internet Explorer.

Note Disabling Active Scripting in the Internet and Local intranet security zones may cause some Web sites to work incorrectly. If you have difficulty using a Web site after you change this setting, and you are sure the site is safe to use, you can add that site to your list of trusted sites. This will allow the site to work correctly.
**Impact of workaround.**There are side effects to prompting before running Active Scripting. Many Web sites that are on the Internet or on an intranet use Active Scripting to provide additional functionality. For example, an online e-commerce site or banking site may use Active Scripting to provide menus, ordering forms, or even account statements. Prompting before running Active Scripting is a global setting that affects all Internet and intranet sites. You will be prompted frequently when you enable this workaround. For each prompt, if you feel you trust the site that you are visiting, click Yes to run Active Scripting. If you do not want to be prompted for all these sites, use the steps outlined in "Add sites that you trust to the Internet Explorer Trusted sites zone".
Add sites that you trust to the Internet Explorer Trusted sites zone
After you set Internet Explorer to require a prompt before it runs ActiveX controls and Active Scripting in the Internet zone and in the Local intranet zone, you can add sites that you trust to the Internet Explorer Trusted sites zone. This will allow you to continue to use trusted Web sites exactly as you do today, while helping to protect you from this attack on untrusted sites. We recommend that you add only sites that you trust to the Trusted sites zone.
To do this, follow these steps:

In Internet Explorer, click Tools, click Internet Options, and then click the Security tab.
In the Select a Web content zone to specify its current security settings box, click Trusted Sites, and then click Sites.
If you want to add sites that do not require an encrypted channel, click to clear the Require server verification (https:) for all sites in this zone check box.
In the Add this Web site to the zone box, type the URL of a site that you trust, and then click Add.
Repeat these steps for each site that you want to add to the zone.
Click OK two times to accept the changes and return to Internet Explorer.

Note Add any sites that you trust not to take malicious action on your system. Two in particular that you may want to add are *.windowsupdate.microsoft.com and *.update.microsoft.com. These are the sites that will host the update, and it requires an ActiveX Control to install the update.

Disable XML Island functionality
Warning If you use Registry Editor incorrectly, you may cause serious problems that may require you to reinstall your operating system. Microsoft cannot guarantee that you can solve problems that result from using Registry Editor incorrectly. Use Registry Editor at your own risk.
Create a backup copy of the registry keys by using the following command from an elevated command prompt:
Regedit.exe /e Disable_XML_Island_backup.reg HKEY_CLASSES_ROOT\CLSID\{379E501F-B231-11D1-ADC1-00805FC752D8}
For Windows Vista and Windows Server 2008 only, take ownership of [HKEY_CLASSES_ROOT\CLSID\{379E501F-B231-11D1-ADC1-00805FC752D8}], as follows:

As an administrator, click Start, click Run, type Regedit in the Open box, and then click OK
Go to [HKEY_CLASSES_ROOT\CLSID\{379E501F-B231-11D1-ADC1-00805FC752D8}]
Click Permission, then Advanced, then Owner
Change Owner to Administrator
Click Grant Full Control to Administrator
Then iterate for all subkeys

Next, save the following to a file with a .REG extension, such as Disable_XML_Island.reg:
Windows Registry Editor Version 5.00[-HKEY_CLASSES_ROOT\CLSID\{379E501F-B231-11D1-ADC1-00805FC752D8}]
Run Disable_XML_Island.reg with the following command from an elevated command prompt:
Regedit.exe /s Disable_XML_Island.reg
Impact of workaround: Embedded XML in HTML may not render correctly.
How to undo the workaround
Restore the original state by running the following command from an elevated command prompt:
Regedit.exe /s Disable_XML_Island_backup.reg
How to undo the workaround introduced in Security Advisory 961051
Microsoft Security Advisory 961051 introduced a manual registry change method for this same workaround. If you had used this method and now desire to undo this workaround, use the following registry file:
Windows Registry Editor Version 5.00
[HKEY_CLASSES_ROOT\CLSID\{379E501F-B231-11D1-ADC1-00805FC752D8}]
@="MsxmlIsland"
[HKEY_CLASSES_ROOT\CLSID\{379E501F-B231-11D1-ADC1-00805FC752D8}\InProcServer32]
@=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,\
00,5c,00,53,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,73,00,\
78,00,6d,00,6c,00,33,00,2e,00,64,00,6c,00,6c,00,00,00
"ThreadingModel"="Apartment"
[HKEY_CLASSES_ROOT\CLSID\{379E501F-B231-11D1-ADC1-00805FC752D8}\TypeLib]
@="{D63E0CE2-A0A2-11D0-9C02-00C04FC99C8E}"


Restrict Internet Explorer from using OLEDB32.dll with an Integrity Level ACL
This workaround applies only to Windows Vista and newer operating systems and requires that UAC prompting and Protected Mode be enabled, which are the default settings.
Save the following text to a temporary directory:
For 32-bit systems
Save to a text file called: "BlockAccess_x86.inf"
[Unicode]
Unicode=yes
[Version]
signature="$CHICAGO$"
Revision=1
[File Security]
"%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll",2,"S:(ML;;NWNRNX;;;ME)"

For 64-bit systems
Save to a text file called: "BlockAccess_x64.inf"
[Unicode]
Unicode=yes
[Version]
signature="$CHICAGO$"
Revision=1
[File Security]
"%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll",2,"S:(ML;;NWNRNX;;;ME)"
"%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll",2,"S:(ML;;NWNRNX;;;ME)"

Run the following command from the temporary directory as an Administrator:
SecEdit /configure /db BlockAccess.sdb /cfg <inf file>
After the command completes, you should see the following messages:
The task has completed successfully.See log %windir%\security\logs\scesrv.log for detail info.
Validating the workaround
To validate that the workaround was successfully applied, run the following commands at a command prompt:
For 32-bit systems
icacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll"
For 64-bit systems
icacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll"
icacls "%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll"

Each time you run icacls, search through the output for the following line.
Mandatory Label\Medium Mandatory Level:(NW,NR,NX)
Impact of workaround: Any ADO/OLE DB applications running in Internet Explorer, which is not common, will stop functioning. The impact is minimal since all other processes running in Medium or higher integrity level would still be able to load the dll and use it.
How to undo the workaround
Save the following text to a temporary directory:
For 32-bit systems
Save to a text file called: "unBlockAccess_x86.inf"
[Unicode]
Unicode=yes
[Version]
signature="$CHICAGO$"
Revision=1
[File Security]
"%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll",2,"S:(ML;;NW;;;ME)"

For 64-bit systems
Save to a text file called: "unBlockAccess_x64.inf"
[Unicode]
Unicode=yes
[Version]
signature="$CHICAGO$"
Revision=1
[File Security]
"%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll",2,"S:(ML;;NW;;;ME)"
"%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll",2,"S:(ML;;NW;;;ME)"

Run the following command from the temporary directory as an Administrator:
SecEdit /configure /db UnblockAccess.sdb /cfg <inf file>
After the command completes, you should see the following messages:
The task has completed successfully.See log %windir%\security\logs\scesrv.log for detail info.

Disable Row Position functionality of OLEDB32.dll
Warning If you use Registry Editor incorrectly, you may cause serious problems that may require you to reinstall your operating system. Microsoft cannot guarantee that you can solve problems that result from using Registry Editor incorrectly. Use Registry Editor at your own risk.
Create a backup copy of the registry keys by using the following command from an elevated command prompt:
Regedit.exe /e Disable_Row_Position_backup.reg HKEY_CLASSES_ROOT\CLSID\{2048EEE6-7FA2-11D0-9E6A-00A0C9138C29}
For Windows Vista and Windows Server 2008 only, take ownership of [HKEY_CLASSES_ROOT\CLSID\{2048EEE6-7FA2-11D0-9E6A-00A0C9138C29}], as follows:

As an administrator, click Start, click Run, type Regedit in the Open box, and then click OK
Go to [HKEY_CLASSES_ROOT\CLSID\{2048EEE6-7FA2-11D0-9E6A-00A0C9138C29}]
Click Permission, then Advanced, then Owner
Change Owner to Administrator
Click Grant Full Control to Administrator
Then iterate for all subkeys

Next, save the following to a file with a .REG extension, such as Disable_Row_Position.reg:
Windows Registry Editor Version 5.00[-HKEY_CLASSES_ROOT\CLSID\{2048EEE6-7FA2-11D0-9E6A-00A0C9138C29}]
Run Disable_Row_Position.reg with the following command from an elevated command prompt:
Regedit.exe /s Disable_Row_Position.reg
Impact of workaround: All ADO applications using the RowPosition property and related information will stop functioning. All OLE DB applications using the OLE DB Row Position Library will stop functioning.
How to undo the workaround
Restore the original state by running the following command from an elevated command prompt:
Regedit.exe /s Disable_Row_Position_backup.reg

Unregister OLEDB32.DLL
Run the following commands from a command prompt as an administrator:

For supported versions of Windows 2000, Windows XP, Windows Server 2003, Windows Vista, and Windows Server 2008 for 32-bit Systems
Regsvr32.exe /u "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll"

For supported versions of Windows XP Professional x64 Edition, Windows Server 2003 x64 Edition, Windows Vista x64 Edition, Windows Server 2008 for x64-based Systems, and Windows Server 2008 for Itanium-based Systems
Regsvr32.exe /u "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll"
Regsvr32.exe /u "%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll"


Impact of workaround: All OLE DB and ADO applications will stop functioning. This includes all ASP/ADO implementations, SQL Server linked services, .Net applications using the System.Data.OLEDB namespace, and some Office functionality that accesses external data.
How to undo the workaround
Run the following commands from a command prompt as an administrator:

For supported versions of Windows 2000, Windows XP, Windows Server 2003, Windows Vista, and Windows Server 2008 for 32-bit Systems
Regsvr32.exe "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll"

For supported versions of Windows XP Professional x64 Edition, Windows Server 2003 x64 Edition, Windows Vista x64 Edition, Windows Server 2008 for x64-based Systems, and Windows Server 2008 for Itanium-based Systems
Regsvr32.exe "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll"
Regsvr32.exe "%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll"



Use ACL to disable OLEDB32.DLL
Run the following commands from a command prompt as an administrator:

For supported versions of Windows 2000, Windows XP, and Windows Server 2003
cacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll" /E /P everyone:N

For supported versions of Windows XP Professional x64 Edition, Windows Server 2003 x64 Edition, and Windows Server 2003 for Itanium-based Systems
cacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll" /E /P everyone:N
cacls "%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll" /E /P everyone:N

For supported versions of Windows Vista and Windows Server 2008 for 32-bit Systems
takeown /f "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll"
icacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll" /save %TEMP%\oledb32.32.dll.TXT
icacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll" /deny everyone:(F)

For supported versions of Windows Vista x64 Edition, Windows Server 2008 for x64-based Systems, and Windows Server 2008 for Itanium-based Systems
takeown /f "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll"
icacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll" /save %TEMP%\oledb32.64.dll.TXT
icacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll" /deny everyone:(F)
takeown /f "%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll"
icacls "%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll" /save %TEMP%\oledb32.32.dll.TXT
icacls "%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll" /deny everyone:(F)


Impact of workaround: All OLE DB and ADO applications will stop functioning. This includes all ASP/ADO implementations, SQL Server linked services, .Net applications using the System.Data.OLEDB namespace, and some Office functionality that accesses external data.
How to undo the workaround
Run the following commands from a command prompt as an administrator:

For supported versions of Windows 2000, Windows XP, and Windows Server 2003
cacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll" /E /R everyone

For supported versions of Windows XP Professional x64 Edition, Windows Server 2003 x64 Edition, and Windows Server 2003 for Itanium-based Systems
cacls "%ProgramFiles%\Common Files\System\Ole DB\oledb32.dll" /E /R everyone
cacls "%ProgramFiles(x86)%\Common Files\System\Ole DB\oledb32.dll" /E /R everyone

For supported versions of Windows Vista and Windows Server 2008 for 32-bit Systems:
icacls "%ProgramFiles%\Common Files\System\Ole DB" /restore %TEMP%\oledb32.32.dll.TXT

For supported versions of Windows Vista x64 Edition, Windows Server 2008 for x64-based Systems, and Windows Server 2008 for Itanium-based Systems
icacls "%ProgramFiles%\Common Files\System\Ole DB" /restore %TEMP%\oledb32.32.dll.TXT
icacls "%ProgramFiles(x86)%\Common Files\System\Ole DB" /restore %TEMP%\oledb32.64.dll.TXT



Enable DEP for Internet Explorer 7 on Windows Vista and on Windows Server 2008
Local Administrators can control DEP/NX by running Internet Explorer as an Administrator. To enable DEP, perform the following steps:

In Internet Explorer, click Tools, click Internet Options, and then click Advanced.
Click Enable memory protection to help mitigate online attacks.

Impact of workaround: Some browser extensions may not be compatible with DEP and may exit unexpectedly. If this occurs, you can disable the add-on, or revert the DEP setting using the Internet Control Panel. This is also accessible using the System Control panel.

Disable Data Binding support in Internet Explorer 8 Beta 2
Perform the following steps:

Set Internet and Local Intranet security zone settings to High.
Save the following to a file with a .REG extension, such as Disable_Data_Binding.reg to add the feature control key:
Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\MAIN\FeatureControl\FEATURE_DATABINDING_SUPPORT]
"iexplore.exe"=dword:00000000
Run Disable_Data_Binding.reg with the following command from an elevated command prompt:
Regedit.exe /s Disable_Data_Binding.reg

Impact of workaround: This workaround turns off data binding for all security zones. Any accessed Web sites that use data binding will no longer render properly.
How to undo the workaround
Use the following registry file to remove the feature control key:
Windows Registry Editor Version 5.00
[-HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\MAIN\FeatureControl\FEATURE_DATABINDING_SUPPORT]



