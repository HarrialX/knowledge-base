Original Source:
https://docs.microsoft.com/en-us/security-updates/securitybulletins/2012/ms12-074

Workarounds for Reflection Bypass Vulnerability - CVE-2012-1895
Workaround refers to a setting or configuration change that does not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:

Disable XAML browser applications in Internet Explorer
To help protect against this vulnerability, change your settings to prompt before running XAML browser applications (XBAPs) or to disable XBAPs in the Internet and Local intranet security zones as follows:

In Internet Explorer, click the Tools menu and then select Internet Options.
Click the Security tab, click Internet, and then click Custom level. Under Settings, for Loose XAML, click Prompt or Disable, and then click OK.
Click the Security tab, click Internet, and then click Custom level. Under Settings, for XAML browser applications, click Prompt or Disable, and then click OK.
Click the Security tab, click Internet, and then click Custom level. Under Settings, for XPS documents, click Prompt or Disable, and then click OK.
On the Security tab, click Custom level. Under .NET Framework-reliant components, set Run components not signed with Authenticode to either Prompt or Disable, and then click OK. Repeat this step for Run components signed with Authenticode, and then click OK.
Click Local intranet, and then click Custom Level. Repeat steps 3 and 4. If you are prompted to confirm that you want to change these settings, click Yes. Click OK to return to Internet Explorer.

Impact of workaround. Microsoft .NET code will not run in Internet Explorer or will not run without prompting. Disabling Microsoft .NET applications and components in the Internet and Local intranet security zones may cause some websites to work incorrectly. If you have difficulty using a website after you change this setting and you are sure the site is safe to use, you can add that site to your list of trusted sites. This will allow the site to work correctly.
Add sites that you trust to the Internet Explorer Trusted sites zone
After you set Internet Explorer to disable XAML browser applications or require a prompt before it runs Loose XAML, XAML browser applications, or XPS documents in the Internet zone and in the Local intranet zone, you can add sites that you trust to the Internet Explorer Trusted sites zone. This will allow you to continue to use trusted websites exactly as you do today, while helping to protect you from this attack on untrusted sites. We recommend that you add only sites that you trust to the Trusted sites zone.
To do this, perform the following steps:

In Internet Explorer, click Tools, click Internet Options, and then click the Security tab.
In the Select a Web content zone to specify its current security settings box, click Trusted Sites, and then click Sites.
If you want to add sites that do not require an encrypted channel, click to clear the Require server verification (https:) for all sites in this zone check box.
In the Add this Web site to the zone box, type the URL of a site that you trust, and then click Add.
Repeat these steps for each site that you want to add to the zone.
Click OK two times to accept the changes and return to Internet Explorer.

Note Add any sites that you trust not to take malicious action on your system. Two in particular that you may want to add are *.windowsupdate.microsoft.com and *.update.microsoft.com. These are the sites that will host the update, and it requires an ActiveX Control to install the update.
How to undo the workaround. Perform the following steps:

In Internet Explorer, click the Tools menu, and then select Internet Options.
Click the Security tab, click Reset all zones to default level, and then click OK.



Workarounds for Code Access Security Info Disclosure Vulnerability - CVE-2012-1896
Microsoft has not identified any workarounds for this vulnerability.
Workarounds for .NET Framework Insecure Library Loading Vulnerability - CVE-2012-2519
Workaround refers to a setting or configuration change that does not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:

Disable loading of libraries from WebDAV and remote network shares
Note See Microsoft Knowledge Base Article 2264107 to deploy a workaround tool that allows customers to disable the loading of libraries from remote network or WebDAV shares. This tool can be configured to disallow insecure loading on a per-application or a global system basis.
Customers who are informed by their vendor of an application being vulnerable can use this tool to help protect against attempts to exploit this issue.
Note See Microsoft Knowledge Base Article 2264107 to use the automated Microsoft Fix it solution to deploy the registry key to block the loading of libraries for SMB and WebDAV shares. Note that this Fix it solution does require you to install the workaround tool also described in Microsoft Knowledge Base Article 2264107 first. This Fix it solution only deploys the registry key and requires the workaround tool in order to be effective. We recommend that administrators review the KB article closely prior to deploying this Fix it solution.

Disable the WebClient service
Disabling the WebClient service helps protect affected systems from attempts to exploit this vulnerability by blocking the most likely remote attack vector through the Web Distributed Authoring and Versioning (WebDAV) client service. After applying this workaround it is still possible for remote attackers who successfully exploit this vulnerability to cause the system to run programs located on the targeted user's computer or the Local Area Network (LAN), but users will be prompted for confirmation before opening arbitrary programs from the Internet.
To disable the WebClient Service, follow these steps:

Click Start, click Run, type Services.msc and then click OK.
Right-click WebClient service and select Properties.
Change the Startup type to Disabled. If the service is running, click Stop.
Click OK and exit the management application.

Impact of workaround. When the WebClient service is disabled, Web Distributed Authoring and Versioning (WebDAV) requests are not transmitted. In addition, any services that explicitly depend on the Web Client service will not start, and an error message will be logged in the System log. For example, WebDAV shares will be inaccessible from the client computer.
How to undo the workaround.
To re-enable the WebClient Service, follow these steps:

Click Start, click Run, type Services.msc and then click OK.
Right-click WebClient service and select Properties.
Change the Startup type to Automatic. If the service is not running, click Start.
Click OK and exit the management application.


Block TCP ports 139 and 445 at the firewall
These ports are used to initiate a connection with the affected component. Blocking TCP ports 139 and 445 at the firewall will help protect systems that are behind that firewall from attempts to exploit this vulnerability. Microsoft recommends that you block all unsolicited inbound communication from the Internet to help prevent attacks that may use other ports. For more information about ports, see the TechNet article, TCP and UDP Port Assignments.
Impact of workaround. Several Windows services use the affected ports. Blocking connectivity to the ports may cause various applications or services to not function. Some of the applications or services that could be impacted are listed below:

Applications that use SMB (CIFS)
Applications that use mailslots or named pipes (RPC over SMB)
Server (File and Print Sharing)
Group Policy
Net Logon
Distributed File System (DFS)
Terminal Server Licensing
Print Spooler
Computer Browser
Remote Procedure Call Locator
Fax Service
Indexing Service
Performance Logs and Alerts
Systems Management Server
License Logging Service

How to undo the workaround. Unblock TCP ports 139 and 445 at the firewall. For more information about ports, see TCP and UDP Port Assignments.


Workarounds for Web Proxy Auto-Discovery Vulnerability - CVE-2012-4776
Workaround refers to a setting or configuration change that does not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:

Configure Internet Explorer not to use WPAD

Click Start, click Control Panel, click Network and Internet, and then click Internet Options.
In the Internet Properties window, click the Connections tab, and then click LAN settings.
In the Local Area Network (LAN) Settings window, uncheck Automatically detect settings and then click OK.

Impact of workaround. Web proxy auto-discovery will be disabled in Internet Explorer.
How to undo the workaround. Follow the reverse of the steps above, ensuring that Automatically detect settings is checked in the Local Area Network (LAN) Settings window.
 

Register WPAD
Follow the steps provided in Microsoft Knowledgebase Article 934864 to register WPAD.
Impact of workaround. WPAD will be registered by an administrator before an attacker has the opportunity to do so.
How to undo the workaround. For more information, see Microsoft Knowledgebase Article 934864.
 

Do not rely on the default web proxy settings in your .NETapplication
Do not rely on the default .NET proxy settings, either explicitly through the WebRequest.DefaultWebProxy property or implicitly, by not setting the proxy (as shown below) in your .NET application. By default, this property is set by the proxy or WPAD settings in Internet Explorer. Developers should explicitly configure the web proxy in the application in the following way:
IWebProxy proxy = new WebProxy("<IP_ADDRESS>", <PORT_NUMBER>);
If your .NET application is already using the DefaultWebProxy property, ensure that the name of the desired proxy is hardcoded in the app.config file.
For documentation on the WebRequest.DefaultWebProxy property, see WebRequest.DefaultWebProxy Property.
Note This requires recompiling and redeploying affected applications.


Workarounds for WPF Reflection Optimization Vulnerability - CVE-2012-4777
Workaround refers to a setting or configuration change that does not correct the underlying vulnerability but would help block known attack vectors before you apply the update. Microsoft has tested the following workarounds and states in the discussion whether a workaround reduces functionality:

Disable XAML browser applications in Internet Explorer
To help protect against this vulnerability, change your settings to prompt before running XAML browser applications (XBAPs) or to disable XBAPs in the Internet and Local intranet security zones as follows:

In Internet Explorer, click the Tools menu and then select Internet Options.
Click the Security tab, click Internet, and then click Custom level. Under Settings, for Loose XAML, click Prompt or Disable, and then click OK.
Click the Security tab, click Internet, and then click Custom level. Under Settings, for XAML browser applications, click Prompt or Disable, and then click OK.
Click the Security tab, click Internet, and then click Custom level. Under Settings, for XPS documents, click Prompt or Disable, and then click OK.
On the Security tab, click Custom level. Under .NET Framework-reliant components, set Run components not signed with Authenticode to either Prompt or Disable, and then click OK. Repeat this step for Run components signed with Authenticode, and then click OK.
Click Local intranet, and then click Custom Level. Repeat steps 3 and 4. If you are prompted to confirm that you want to change these settings, click Yes. Click OK to return to Internet Explorer.

Impact of workaround. Microsoft .NET code will not run in Internet Explorer or will not run without prompting. Disabling Microsoft .NET applications and components in the Internet and Local intranet security zones may cause some websites to work incorrectly. If you have difficulty using a website after you change this setting and you are sure the site is safe to use, you can add that site to your list of trusted sites. This will allow the site to work correctly.
Add sites that you trust to the Internet Explorer Trusted sites zone
After you set Internet Explorer to disable XAML browser applications or require a prompt before it runs Loose XAML, XAML browser applications, or XPS documents in the Internet zone and in the Local intranet zone, you can add sites that you trust to the Internet Explorer Trusted sites zone. This will allow you to continue to use trusted websites exactly as you do today, while helping to protect you from this attack on untrusted sites. We recommend that you add only sites that you trust to the Trusted sites zone.
To do this, perform the following steps:

In Internet Explorer, click Tools, click Internet Options, and then click the Security tab.
In the Select a Web content zone to specify its current security settings box, click Trusted Sites, and then click Sites.
If you want to add sites that do not require an encrypted channel, click to clear the Require server verification (https:) for all sites in this zone check box.
In the Add this Web site to the zone box, type the URL of a site that you trust, and then click Add.
Repeat these steps for each site that you want to add to the zone.
Click OK two times to accept the changes and return to Internet Explorer.

Note Add any sites that you trust not to take malicious action on your system. Two in particular that you may want to add are *.windowsupdate.microsoft.com and *.update.microsoft.com. These are the sites that will host the update, and it requires an ActiveX Control to install the update.
How to undo the workaround. Perform the following steps:

In Internet Explorer, click the Tools menu, and then select Internet Options.
Click the Security tab, click Reset all zones to default level, and then click OK.



