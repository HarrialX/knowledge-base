{ 
  "text" : "A heap use-after-free flaw was found in curl versions from 7.59.0 through 7.61.1 in the code related to closing an easy handle. When closing and cleaning up an 'easy' handle in the `Curl_close()` function, the library code first frees a struct (without nulling the pointer) and might then subsequently erroneously write to a struct field within that already freed struct.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "TTP#61dc059bc66336171fa7bd29101eb5cd" ,
    "type" : "TTP" ,
    "subType" : "TTP" ,
    "value" : "use-after-free" ,
    "begin" : 7 ,
    "end" : 21 ,
    "canonicalForm" : "use-after-free" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "66980435028b279cd6693e0e3f3282f5" ,
    "type" : "MiscEntity" ,
    "subType" : "version" ,
    "value" : "curl version" ,
    "begin" : 40 ,
    "end" : 53 ,
    "canonicalForm" : "curl version" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [ { 
    "rid" : "R1" ,
    "type" : "found_in" ,
    "predicate" : { 
      "begin" : 31 ,
      "end" : 39 ,
      "surfaceForm" : "found in"
    }
     ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 7 ,
      "end" : 21 ,
      "eid" : "E1" ,
      "canonicalForm" : "use-after-free"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 40 ,
      "end" : 53 ,
      "eid" : "E2" ,
      "canonicalForm" : "curl version"
    }
    ,  ]
  }
  ,  ]
}
