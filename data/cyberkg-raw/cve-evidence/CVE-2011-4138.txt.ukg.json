{ 
  "text" : "The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "ThreatActor#d0f531219210b35f7261f3d6049ee44c" ,
    "type" : "ThreatActor" ,
    "subType" : "ThreatActor" ,
    "value" : "remote attacker" ,
    "begin" : 263 ,
    "end" : 279 ,
    "canonicalForm" : "remote attacker" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "4f2cf7569b76fe08dd712a008dc4c8b9" ,
    "type" : "MiscEntity" ,
    "subType" : "request" ,
    "value" : "arbitrary GET request" ,
    "begin" : 291 ,
    "end" : 380 ,
    "canonicalForm" : "arbitrary GET request" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [ { 
    "rid" : "R1" ,
    "type" : "trigger" ,
    "predicate" : { 
      "begin" : 280 ,
      "end" : 290 ,
      "surfaceForm" : "to trigger"
    }
     ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 263 ,
      "end" : 279 ,
      "eid" : "E1" ,
      "canonicalForm" : "remote attacker"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 291 ,
      "end" : 380 ,
      "eid" : "E2" ,
      "canonicalForm" : "arbitrary GET request"
    }
    ,  ]
  }
  ,  ]
}
