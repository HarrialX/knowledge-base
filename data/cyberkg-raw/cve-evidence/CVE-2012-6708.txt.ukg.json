{ 
  "text" : "jQuery before 1.9.0 is vulnerable to Cross-site Scripting (XSS) attacks. The jQuery(strInput) function does not differentiate selectors from HTML in a reliable fashion. In vulnerable versions, jQuery determined whether the input was HTML by looking for the '<' character anywhere in the string, giving attackers more flexibility when attempting to construct a malicious payload. In fixed versions, jQuery only deems the input to be HTML if it explicitly starts with the '<' character, limiting exploitability only to attackers who can control the beginning of a string, which is far less common.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "TTP#97de165309fd38671b7d2c9d724d29dd" ,
    "type" : "TTP" ,
    "subType" : "TTP" ,
    "value" : "cross-site scripting" ,
    "begin" : 37 ,
    "end" : 57 ,
    "canonicalForm" : "Cross-site Scripting" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "TTP#2c71e977eccffb1cfb7c6cc22e0e7595" ,
    "type" : "TTP" ,
    "subType" : "TTP" ,
    "value" : "xss" ,
    "begin" : 59 ,
    "end" : 62 ,
    "canonicalForm" : "XSS" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [ { 
    "rid" : "R1" ,
    "type" : "relatedEntity" ,
    "predicate" : { } ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 37 ,
      "end" : 57 ,
      "eid" : "E1" ,
      "canonicalForm" : "Cross-site Scripting"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 59 ,
      "end" : 62 ,
      "eid" : "E2" ,
      "canonicalForm" : "XSS"
    }
    ,  ]
  }
  ,  ]
}
