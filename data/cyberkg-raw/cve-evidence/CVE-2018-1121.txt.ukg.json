{ 
  "text" : "procps-ng, procps is vulnerable to a process hiding through race condition. Since the kernel's proc_pid_readdir() returns PID entries in ascending numeric order, a process occupying a high PID can use inotify events to determine when the process list is being scanned, and fork/exec to obtain a lower PID, thus avoiding enumeration. An unprivileged attacker can hide a process from procps-ng's utilities by exploiting a race condition in reading /proc/PID entries. This vulnerability affects procps and procps-ng up to version 3.3.15, newer versions might be affected also.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "ThreatActor#e033a21a2218370c6b0b4d10286ac992" ,
    "type" : "ThreatActor" ,
    "subType" : "ThreatActor" ,
    "value" : "unprivileged attacker" ,
    "begin" : 336 ,
    "end" : 357 ,
    "canonicalForm" : "unprivileged attacker" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "66e10e9ff65ef479654dde3968d3440d" ,
    "type" : "MiscEntity" ,
    "subType" : "ng" ,
    "value" : "ng" ,
    "begin" : 389 ,
    "end" : 463 ,
    "canonicalForm" : "ng" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [ { 
    "rid" : "R1" ,
    "type" : "hide" ,
    "predicate" : { 
      "begin" : 358 ,
      "end" : 366 ,
      "surfaceForm" : "can hide"
    }
     ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 336 ,
      "end" : 357 ,
      "eid" : "E1" ,
      "canonicalForm" : "unprivileged attacker"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 389 ,
      "end" : 463 ,
      "eid" : "E2" ,
      "canonicalForm" : "ng"
    }
    ,  ]
  }
  ,  ]
}
