{ 
  "text" : "The extractFrom function in Internals/QuotedString.cpp in Arduino JSON before 4.5 allows remote attackers to cause a denial of service (crash) via a JSON string with a \\ (backslash) followed by a terminator, as demonstrated by \"\\\\\\0\", which triggers a buffer overflow and over-read.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "FileName#dd47d618835ac28ded4fe13a0e2f02dc" ,
    "type" : "FileName" ,
    "subType" : "FileName" ,
    "value" : "QuotedString.cpp" ,
    "begin" : 38 ,
    "end" : 54 ,
    "canonicalForm" : "QuotedString.cpp" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "ThreatActor#d0f531219210b35f7261f3d6049ee44c" ,
    "type" : "ThreatActor" ,
    "subType" : "ThreatActor" ,
    "value" : "remote attacker" ,
    "begin" : 89 ,
    "end" : 105 ,
    "canonicalForm" : "remote attacker" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E3" ,
    "keyid" : "TTP#9c98ef6a7451d6f82ca2194ee23d1acb" ,
    "type" : "TTP" ,
    "subType" : "TTP" ,
    "value" : "denial of service" ,
    "begin" : 117 ,
    "end" : 134 ,
    "canonicalForm" : "denial of service" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E4" ,
    "keyid" : "Vulnerability#4ce61ca473e0a8f2fdbb857a0a53b5bc" ,
    "type" : "Vulnerability" ,
    "subType" : "Vulnerability" ,
    "value" : "buffer overflow" ,
    "begin" : 252 ,
    "end" : 267 ,
    "canonicalForm" : "buffer overflow" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [ { 
    "rid" : "R1" ,
    "type" : "relatedEntity" ,
    "predicate" : { } ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 38 ,
      "end" : 54 ,
      "eid" : "E1" ,
      "canonicalForm" : "QuotedString.cpp"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 117 ,
      "end" : 134 ,
      "eid" : "E3" ,
      "canonicalForm" : "denial of service"
    }
    ,  ]
  }
  , { 
    "rid" : "R2" ,
    "type" : "cause" ,
    "predicate" : { 
      "begin" : 106 ,
      "end" : 114 ,
      "surfaceForm" : "to cause"
    }
     ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 89 ,
      "end" : 105 ,
      "eid" : "E2" ,
      "canonicalForm" : "remote attacker"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 117 ,
      "end" : 134 ,
      "eid" : "E3" ,
      "canonicalForm" : "denial of service"
    }
    ,  ]
  }
  , { 
    "rid" : "R3" ,
    "type" : "relatedEntity" ,
    "predicate" : { } ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 89 ,
      "end" : 105 ,
      "eid" : "E2" ,
      "canonicalForm" : "remote attacker"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 252 ,
      "end" : 267 ,
      "eid" : "E4" ,
      "canonicalForm" : "buffer overflow"
    }
    ,  ]
  }
  , { 
    "rid" : "R4" ,
    "type" : "relatedEntity" ,
    "predicate" : { } ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 38 ,
      "end" : 54 ,
      "eid" : "E1" ,
      "canonicalForm" : "QuotedString.cpp"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 252 ,
      "end" : 267 ,
      "eid" : "E4" ,
      "canonicalForm" : "buffer overflow"
    }
    ,  ]
  }
  , { 
    "rid" : "R5" ,
    "type" : "relatedEntity" ,
    "predicate" : { } ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 117 ,
      "end" : 134 ,
      "eid" : "E3" ,
      "canonicalForm" : "denial of service"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 252 ,
      "end" : 267 ,
      "eid" : "E4" ,
      "canonicalForm" : "buffer overflow"
    }
    ,  ]
  }
  , { 
    "rid" : "R6" ,
    "type" : "followed_by" ,
    "predicate" : { 
      "begin" : 82 ,
      "end" : 207 ,
      "surfaceForm" : "allows remote attackers to cause a denial of service (crash) via a JSON string with a \\ (backslash) followed by a terminator,"
    }
     ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 38 ,
      "end" : 54 ,
      "eid" : "E1" ,
      "canonicalForm" : "QuotedString.cpp"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 89 ,
      "end" : 105 ,
      "eid" : "E2" ,
      "canonicalForm" : "remote attacker"
    }
    ,  ]
  }
  ,  ]
}
