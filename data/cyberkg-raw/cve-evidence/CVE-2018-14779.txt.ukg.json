{ 
  "text" : "A buffer overflow issue was discovered in the Yubico-Piv 1.5.0 smartcard driver. The file lib/ykpiv.c contains the following code in the function `ykpiv_transfer_data()`: {% highlight c %} if(*out_len + recv_len - 2 > max_out) { fprintf(stderr, \"Output buffer to small, wanted to write %lu, max was %lu.\", *out_len + recv_len - 2, max_out); } if(out_data) { memcpy(out_data, data, recv_len - 2); out_data += recv_len - 2; *out_len += recv_len - 2; } {% endhighlight %} -- it is clearly checked whether the buffer is big enough to hold the data copied using `memcpy()`, but no error handling happens to avoid the `memcpy()` in such cases. This code path can be triggered with malicious data coming from a smartcard.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "Vulnerability#4ce61ca473e0a8f2fdbb857a0a53b5bc" ,
    "type" : "Vulnerability" ,
    "subType" : "Vulnerability" ,
    "value" : "buffer overflow" ,
    "begin" : 2 ,
    "end" : 17 ,
    "canonicalForm" : "buffer overflow" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "3789e082f9e842d41f8c3bbd1aa648f4" ,
    "type" : "MiscEntity" ,
    "subType" : "yubico" ,
    "value" : "yubico" ,
    "begin" : 46 ,
    "end" : 52 ,
    "canonicalForm" : "yubico" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [ { 
    "rid" : "R1" ,
    "type" : "discovered_in" ,
    "predicate" : { 
      "begin" : 28 ,
      "end" : 41 ,
      "surfaceForm" : "discovered in"
    }
     ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 2 ,
      "end" : 17 ,
      "eid" : "E1" ,
      "canonicalForm" : "buffer overflow"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 46 ,
      "end" : 52 ,
      "eid" : "E2" ,
      "canonicalForm" : "yubico"
    }
    ,  ]
  }
  ,  ]
}
