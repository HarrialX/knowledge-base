{ 
  "text" : "Linux kernel: Exploitable memory corruption due to UFO to non-UFO path switch. When building a UFO packet with MSG_MORE __ip_append_data() calls ip_ufo_append_data() to append. However in between two send() calls, the append path can be switched from UFO to non-UFO one, which leads to a memory corruption. In case UFO packet lengths exceeds MTU, copy = maxfraglen - skb->len becomes negative on the non-UFO path and the branch to allocate new skb is taken. This triggers fragmentation and computation of fraggap = skb_prev->len - maxfraglen. Fraggap can exceed MTU, causing copy = datalen - transhdrlen - fraggap to become negative. Subsequently skb_copy_and_csum_bits() writes out-of-bounds. A similar issue is present in IPv6 code. The bug was introduced in e89e9cf539a2 (\"[IPv4/IPv6]: UFO Scatter-gather approach\") on Oct 18 2005.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "Identity#e206a54e97690cce50cc872dd70ee896" ,
    "type" : "Identity" ,
    "subType" : "Organization" ,
    "value" : "linux" ,
    "begin" : 0 ,
    "end" : 5 ,
    "canonicalForm" : "Linux" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "Product#e206a54e97690cce50cc872dd70ee896" ,
    "type" : "Product" ,
    "subType" : "OperatingSystem" ,
    "value" : "linux" ,
    "begin" : 0 ,
    "end" : 5 ,
    "canonicalForm" : "Linux" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E3" ,
    "keyid" : "Vulnerability#96a8ab275315eee57cf97a5a040cb1cf" ,
    "type" : "Vulnerability" ,
    "subType" : "Vulnerability" ,
    "value" : "memory corruption" ,
    "begin" : 26 ,
    "end" : 43 ,
    "canonicalForm" : "memory corruption" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E4" ,
    "keyid" : "Vulnerability#96a8ab275315eee57cf97a5a040cb1cf" ,
    "type" : "Vulnerability" ,
    "subType" : "Vulnerability" ,
    "value" : "memory corruption" ,
    "begin" : 288 ,
    "end" : 305 ,
    "canonicalForm" : "memory corruption" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [  ]
}
