{ 
  "text" : "The TLS protocol 1.2 and earlier supports the rsa_fixed_dh, dss_fixed_dh, rsa_fixed_ecdh, and ecdsa_fixed_ecdh values for ClientCertificateType but does not directly document the ability to compute the master secret in certain situations with a client secret key and server public key but not a server secret key, which makes it easier for man-in-the-middle attackers to spoof TLS servers by leveraging knowledge of the secret key for an arbitrary installed client X.509 certificate, aka the \"Key Compromise Impersonation (KCI)\" issue.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "ThreatActor#1863d87eb2fdce5d9bec7658e11ab9f7" ,
    "type" : "ThreatActor" ,
    "subType" : "ThreatActor" ,
    "value" : "-middle attacker" ,
    "begin" : 350 ,
    "end" : 367 ,
    "canonicalForm" : "-middle attacker" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "Product#de1e0817c47db6e2d639e723a11a6775" ,
    "type" : "Product" ,
    "subType" : "Application" ,
    "value" : "x.509 certificate" ,
    "begin" : 465 ,
    "end" : 482 ,
    "canonicalForm" : "X.509 certificate" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [ { 
    "rid" : "R1" ,
    "type" : "relatedEntity" ,
    "predicate" : { } ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 350 ,
      "end" : 367 ,
      "eid" : "E1" ,
      "canonicalForm" : "-middle attacker"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 465 ,
      "end" : 482 ,
      "eid" : "E2" ,
      "canonicalForm" : "X.509 certificate"
    }
    ,  ]
  }
  ,  ]
}
