{ 
  "text" : "The Owned smart contract implementation for Aurora DAO (AURA), an Ethereum ERC20 token, allows attackers to acquire contract ownership because the setOwner function is declared as public. An attacker can then conduct a lockBalances() denial of service attack.\n" ,
  "entities" : [ { 
    "eid" : "E1" ,
    "keyid" : "Identity#99c8ef576f385bc322564d5694df6fc2" ,
    "type" : "Identity" ,
    "subType" : "Organization" ,
    "value" : "aurora" ,
    "begin" : 44 ,
    "end" : 50 ,
    "canonicalForm" : "Aurora" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E2" ,
    "keyid" : "3f858cf8cfd59f25010e71b6b5671428" ,
    "type" : "MiscEntity" ,
    "subType" : "attacker" ,
    "value" : "attacker" ,
    "begin" : 95 ,
    "end" : 104 ,
    "canonicalForm" : "attacker" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E3" ,
    "keyid" : "3f858cf8cfd59f25010e71b6b5671428" ,
    "type" : "MiscEntity" ,
    "subType" : "attacker" ,
    "value" : "attacker" ,
    "begin" : 191 ,
    "end" : 199 ,
    "canonicalForm" : "attacker" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E4" ,
    "keyid" : "Campaign#5302a50fabeb23972c89c5f2a5abbcac" ,
    "type" : "Campaign" ,
    "subType" : "Campaign" ,
    "value" : "lockbalances() denial of service" ,
    "begin" : 219 ,
    "end" : 258 ,
    "canonicalForm" : "lockBalances() denial of service attack" ,
    "score" : "0.0"
  }
  , { 
    "eid" : "E5" ,
    "keyid" : "TTP#9c98ef6a7451d6f82ca2194ee23d1acb" ,
    "type" : "TTP" ,
    "subType" : "TTP" ,
    "value" : "denial of service" ,
    "begin" : 234 ,
    "end" : 251 ,
    "canonicalForm" : "denial of service" ,
    "score" : "0.0"
  }
  ,  ] ,
  "relations" : [ { 
    "rid" : "R1" ,
    "type" : "relatedIdentity" ,
    "predicate" : { } ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 219 ,
      "end" : 258 ,
      "eid" : "E4" ,
      "canonicalForm" : "lockBalances() denial of service attack"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 44 ,
      "end" : 50 ,
      "eid" : "E1" ,
      "canonicalForm" : "Aurora"
    }
    ,  ]
  }
  , { 
    "rid" : "R2" ,
    "type" : "conduct" ,
    "predicate" : { 
      "begin" : 200 ,
      "end" : 216 ,
      "surfaceForm" : "can then conduct"
    }
     ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 191 ,
      "end" : 199 ,
      "eid" : "E3" ,
      "canonicalForm" : "attacker"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 219 ,
      "end" : 258 ,
      "eid" : "E4" ,
      "canonicalForm" : "lockBalances() denial of service attack"
    }
    ,  ]
  }
  , { 
    "rid" : "R3" ,
    "type" : "allow" ,
    "predicate" : { 
      "begin" : 88 ,
      "end" : 94 ,
      "surfaceForm" : "allows"
    }
     ,
    "arguments" : [ { 
      "argnum" : 1 ,
      "begin" : 44 ,
      "end" : 50 ,
      "eid" : "E1" ,
      "canonicalForm" : "Aurora"
    }
    , { 
      "argnum" : 2 ,
      "begin" : 95 ,
      "end" : 104 ,
      "eid" : "E2" ,
      "canonicalForm" : "attacker"
    }
    ,  ]
  }
  ,  ]
}
